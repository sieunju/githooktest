#!/bin/sh
# post-merge hook - feature/, fix/ 브랜치 자동 삭제
# chmod +x .git/hooks/post-merge.sh

current_branch=$(git branch --show-current)

# 브랜치가 삭제 가능한지 확인
is_deletable() {
    local branch=$1

    # 보호된 브랜치들
    case "$branch" in
        main|master|develop|release/*)
            return 1  # 삭제 불가
            ;;
        feature/*|fix/*)
            return 0  # 삭제 가능
            ;;
        *)
            return 1  # 기본적으로 삭제 불가
            ;;
    esac
}

if [ "$current_branch" = "develop" ]; then
    echo "Auto-cleaning merged feature/fix branches..."

    # merge된 브랜치들 중 삭제 가능한 것들만 처리
    git branch --merged | grep -v "\*" | tr -d ' ' | while read -r branch; do
        if [ -n "$branch" ] && is_deletable "$branch"; then
            echo "Deleting: $branch"

            # 로컬 삭제
            # git branch -d "$branch" 2>/dev/null

            # 리모트 삭제 (존재하는 경우)
            if git ls-remote --exit-code --heads origin "$branch" >/dev/null 2>&1; then
                git push origin --delete "$branch" 2>/dev/null
            fi
        fi
    done

    git remote prune origin 2>/dev/null
    echo "Cleanup completed!"
fi