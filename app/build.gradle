plugins {
    alias(libs.plugins.android.application)
    alias(libs.plugins.kotlin.android)
}

def timeMinute = (System.currentTimeMillis() / (60 * 1000)).toInteger()

android {
    namespace = "com.hmju.githooktest"
    compileSdk = 35

    defaultConfig {
        applicationId = "com.hmju.githooktest"
        minSdk = 26
        targetSdk = 35
        versionCode = timeMinute
        versionName = "0.0.3"

        testInstrumentationRunner = "androidx.test.runner.AndroidJUnitRunner"
        setProperty("archivesBaseName", "git_test ${versionCode}_${versionName}")
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles(
                getDefaultProguardFile("proguard-android-optimize.txt"),
                "proguard-rules.pro"
            )
        }
    }
    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_11
        targetCompatibility = JavaVersion.VERSION_11
    }
    kotlinOptions {
        jvmTarget = "11"
    }
}

tasks.register("updateTagsFile") {
    doLast {
        def versionName = android.defaultConfig.versionName
        def versionCode = android.defaultConfig.versionCode

        def tagFile = file("${rootProject.projectDir}/tags/default.txt")
        def content = """name:v${versionName}(${versionCode})\nmessage:"""
        tagFile.text = content
    }
}

afterEvaluate {
    tasks.matching { task ->
        task.name.contains('Release')
    }.configureEach { task ->
        if (task.name.startsWith('assemble') || task.name.startsWith('bundle')) {
            task.finalizedBy updateTagsFile
            task.doFirst {
                println "ðŸš€ Task updateTagsFile"
            }
            task.doLast {
                println "âœ… Task updateTagsFile"
            }
        }
    }
}

dependencies {

    implementation(libs.androidx.core.ktx)
    implementation(libs.androidx.appcompat)
    implementation(libs.material)
    implementation(libs.androidx.activity)
    implementation(libs.androidx.constraintlayout)
    testImplementation(libs.junit)
    androidTestImplementation(libs.androidx.junit)
    androidTestImplementation(libs.androidx.espresso.core)
}